{"version":3,"file":"static/webpack/static\\development\\pages\\character\\[pid].js.f278802754da8b2c2a49.hot-update.js","sources":["webpack:///./src/containers/CharacterDetails/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { useRouter } from 'next/router';\r\nimport { gql } from 'apollo-boost';\r\nimport {\r\n  Box,\r\n  Heading,\r\n  SimpleGrid,\r\n  Text,\r\n  Tab,\r\n  Tabs,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Image,\r\n  Divider\r\n} from '@chakra-ui/core';\r\nimport { GET_CHARACTER_DETAILS } from '../../lib/queries';\r\nimport Loader from '../../components/common/Loader';\r\nimport { Error } from '../CharacterList/styles';\r\nimport { Title, Episode } from './styles';\r\n\r\nconst CharacterDetails = () => {\r\n  const router = useRouter();\r\n\r\n  const { pid } = router.query;\r\n\r\n  const { loading, error, data } = useQuery(GET_CHARACTER_DETAILS(gql), {\r\n    variables: { id: pid },\r\n    notifyOnNetworkStatusChange: true,\r\n    fetchPolicy: 'cache-first'\r\n  });\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <Error error=\"error\" message=\"Erro fetching character data...\" />;\r\n\r\n  const { name, image, status, species, type, gender, origin, location, episode } = data[\r\n    'character'\r\n  ];\r\n\r\n  const renderEpisodes = () => (\r\n    <ul>\r\n      {episode.map(episode => (\r\n        <Episode key={episode.id} {...episode} />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      padding={{ md: '20px', sm: '20px', xs: '20px' }}\r\n      marginLeft={{ md: '250px', sm: '20px', xs: '20px' }}\r\n      marginRight={{ md: '250px', sm: '20px', xs: '20px' }}\r\n      marginTop=\"50px\"\r\n      pb=\"100px\"\r\n      borderRadius=\"10px\"\r\n      d=\"flex\"\r\n      alignItems={{ md: 'flex-start', sm: 'center', xs: 'center' }}\r\n      justifyContent=\"normal\"\r\n      flexDir={{ md: 'row', sm: 'column', xs: 'column' }}\r\n      shadow=\"md\"\r\n    >\r\n      <Box flex=\"0 0 60%\" p=\"150px\" paddingTop=\"0px\" paddingBottom=\"0px\">\r\n        <Image\r\n          src={image}\r\n          alt={name}\r\n          textAlign=\"center\"\r\n          width=\"100%\"\r\n          borderRadius=\"1000px\"\r\n          border=\"5px solid teal\"\r\n          shadow=\"md\"\r\n        />\r\n        <Heading fontSize=\"2xl\" textAlign=\"center\" mt=\"20px\">\r\n          {name}\r\n        </Heading>\r\n        <Divider />\r\n      </Box>\r\n      <Box pl=\"20px\" pr=\"20px\" flex=\"1\">\r\n        <Title>Appears on:</Title>\r\n        {renderEpisodes()}\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return <pre>{JSON.stringify(data, null, 2)}</pre>;\r\n};\r\n\r\nexport default CharacterDetails;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAaaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}