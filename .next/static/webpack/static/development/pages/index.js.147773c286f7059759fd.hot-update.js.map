{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.147773c286f7059759fd.hot-update.js","sources":["webpack:///./src/components/CharacterList/index.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport { Box, Heading, Stack, Flex, SimpleGrid, Button } from '@chakra-ui/core';\r\nimport CharacterItem from '../CharacterItem';\r\nimport Loader from '../Loader';\r\nimport Filter from '../Filter';\r\nimport { FaRegSadCry } from 'react-icons/fa';\r\nimport Pagination from '../Pagination';\r\n\r\n// location {\r\n//   id\r\n//   name\r\n//   type\r\n// }\r\n\r\n// origin {\r\n//   id\r\n//   name\r\n//   type\r\n//   dimension\r\n// }\r\n\r\nconst GET_CHARACTERS = gql`\r\n  query characters($page: Int!) {\r\n    characters(page: $page) {\r\n      results {\r\n        id\r\n        name\r\n        status\r\n        species\r\n        type\r\n        gender\r\n\r\n        image\r\n        episode {\r\n          id\r\n          name\r\n          air_date\r\n        }\r\n\r\n        location {\r\n          name\r\n        }\r\n        created\r\n      }\r\n\r\n      info {\r\n        pages\r\n        next\r\n        prev\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Error = ({ error }) => (\r\n  <Box\r\n    mt=\"70px\"\r\n    d=\"flex\"\r\n    flexDir=\"column\"\r\n    alignItems=\"center\"\r\n    justifyContent=\"center\"\r\n    color=\"gray.400\"\r\n  >\r\n    <Heading mb=\"15px\" textAlign=\"center\" fontSize=\"26px\" fontWeight=\"semibold\">\r\n      Could not fetch Rick and Morty characters...\r\n    </Heading>\r\n    <Box as={FaRegSadCry} size=\"64px\" />\r\n    <pre>{JSON.stringify(error, null, 4)}</pre>\r\n  </Box>\r\n);\r\n\r\nconst CharacterList = () => {\r\n  const { loading, error, data, fetchMore } = useQuery(GET_CHARACTERS, {\r\n    variables: { page: 0 },\r\n    notifyOnNetworkStatusChange: true\r\n  });\r\n\r\n  const characterData = data ? data['characters']['results'] : [];\r\n  const { pages, next, prev } = data['characters']['info'];\r\n\r\n  const onPrev = () => {};\r\n  const onNext = () => {};\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  return (\r\n    <Box p={{ md: '50px', sm: '40px', xs: '20px' }}>\r\n      <Heading as=\"h1\" size=\"2xl\">\r\n        Rick and Morty Characters:\r\n      </Heading>\r\n\r\n      {error ? (\r\n        <Error error={error} />\r\n      ) : (\r\n        <>\r\n          <Filter />\r\n          <Pagination prev={null} next={2} onPrev={onPrev} onNext={onNext} />\r\n\r\n          <SimpleGrid columns={{ md: 5, sm: 3, xs: 1 }} spacingX=\"30px\" spacingY=\"30px\">\r\n            {characterData.map(character => (\r\n              <CharacterItem key={character.id} {...character} />\r\n            ))}\r\n          </SimpleGrid>\r\n\r\n          <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" mt=\"50px\">\r\n            <Button onClick={() => loadMoreCharacters(data, fetchMore)} color=\"blue\" size=\"lg\">\r\n              Fetch more!\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst loadMoreCharacters = (data, fetchMore) =>\r\n  fetchMore({\r\n    variables: {\r\n      page: data['characters']['info']['next']\r\n    },\r\n    updateQuery: (previousResult, { fetchMoreResult }) => {\r\n      if (!fetchMoreResult) return previousResult;\r\n\r\n      return fetchMoreResult;\r\n\r\n      return Object.assign({}, previousResult, {\r\n        characters: {\r\n          results: [...previousResult.characters.results, ...fetchMoreResult.characters.results]\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\nexport default CharacterList;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiCA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAEA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AADA;AADA;AAKA;AAdA;AACA;AAgBA;;;;A","sourceRoot":""}