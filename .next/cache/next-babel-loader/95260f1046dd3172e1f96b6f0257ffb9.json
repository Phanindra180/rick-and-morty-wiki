{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"X:\\\\Victor\\\\Documents\\\\dev\\\\web\\\\rick-and-morty-wiki\\\\src\\\\components\\\\layout\\\\Filter.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Box, Select, SimpleGrid, Input, Button } from '@chakra-ui/core';\n\nconst Filter = props => {\n  const {\n    filter,\n    setFilter,\n    onFilter\n  } = props;\n  return __jsx(Box, {\n    border: \"0px solid gray\",\n    borderRadius: 5,\n    mt: \"20px\",\n    mb: \"20px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(SimpleGrid, {\n    columns: {\n      md: 6,\n      xs: 1\n    },\n    spacing: \"15px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(Input, {\n    placeholder: \"Name\",\n    value: filter.name,\n    onChange: e => setFilter(_objectSpread({}, filter, {\n      name: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), __jsx(Select, {\n    placeholder: \"Status\",\n    value: filter.status,\n    onChange: e => setFilter(_objectSpread({}, filter, {\n      status: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"option2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Alive\"), __jsx(\"option\", {\n    value: \"option1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Dead\"), __jsx(\"option\", {\n    value: \"option3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"unknown\")), __jsx(Input, {\n    placeholder: \"Species\",\n    value: filter.species,\n    onChange: e => setFilter(_objectSpread({}, filter, {\n      species: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(Input, {\n    placeholder: \"Type\",\n    value: filter.type,\n    onChange: e => setFilter(_objectSpread({}, filter, {\n      type: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(Select, {\n    placeholder: \"Gender\",\n    value: filter.gender,\n    onChange: e => setFilter(_objectSpread({}, filter, {\n      gender: e.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"option1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Male\"), __jsx(\"option\", {\n    value: \"option2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Female\"), __jsx(\"option\", {\n    value: \"option3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Genderless\"), __jsx(\"option\", {\n    value: \"option3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"unknown\")), __jsx(Button, {\n    variantColor: \"blue\",\n    onClick: onFilter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Filter\")));\n};\n\nexport default Filter;","map":{"version":3,"sources":["X:/Victor/Documents/dev/web/rick-and-morty-wiki/src/components/layout/Filter.js"],"names":["React","Box","Select","SimpleGrid","Input","Button","Filter","props","filter","setFilter","onFilter","md","xs","name","e","target","value","status","species","type","gender"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Box, Select, SimpleGrid, Input, Button } from '@chakra-ui/core';\r\n\r\nconst Filter = props => {\r\n  const { filter, setFilter, onFilter } = props;\r\n\r\n  return (\r\n    <Box border=\"0px solid gray\" borderRadius={5} mt=\"20px\" mb=\"20px\">\r\n      <SimpleGrid columns={{ md: 6, xs: 1 }} spacing=\"15px\">\r\n        <Input\r\n          placeholder=\"Name\"\r\n          value={filter.name}\r\n          onChange={e => setFilter({ ...filter, name: e.target.value })}\r\n        />\r\n        <Select\r\n          placeholder=\"Status\"\r\n          value={filter.status}\r\n          onChange={e => setFilter({ ...filter, status: e.target.value })}\r\n        >\r\n          <option value=\"option2\">Alive</option>\r\n          <option value=\"option1\">Dead</option>\r\n          <option value=\"option3\">unknown</option>\r\n        </Select>\r\n        <Input\r\n          placeholder=\"Species\"\r\n          value={filter.species}\r\n          onChange={e => setFilter({ ...filter, species: e.target.value })}\r\n        />\r\n\r\n        <Input\r\n          placeholder=\"Type\"\r\n          value={filter.type}\r\n          onChange={e => setFilter({ ...filter, type: e.target.value })}\r\n        />\r\n\r\n        <Select\r\n          placeholder=\"Gender\"\r\n          value={filter.gender}\r\n          onChange={e => setFilter({ ...filter, gender: e.target.value })}\r\n        >\r\n          <option value=\"option1\">Male</option>\r\n          <option value=\"option2\">Female</option>\r\n          <option value=\"option3\">Genderless</option>\r\n          <option value=\"option3\">unknown</option>\r\n        </Select>\r\n        <Button variantColor=\"blue\" onClick={onFilter}>\r\n          Filter\r\n        </Button>\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n"]},"metadata":{},"sourceType":"module"}