{"ast":null,"code":"var _jsxFileName = \"X:\\\\Victor\\\\Documents\\\\dev\\\\web\\\\rick-and-morty-wiki\\\\src\\\\containers\\\\CharacterDetails\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRouter } from 'next/router';\nimport { gql } from 'apollo-boost';\nimport { Box, Heading, SimpleGrid, Text, Tab, Tabs, TabList, TabPanel, TabPanels, Image } from '@chakra-ui/core';\nimport { GET_CHARACTER_DETAILS } from '../../lib/queries';\nimport Loader from '../../components/common/Loader';\nimport { Error } from '../CharacterList/styles';\n\nconst CharacterDetails = () => {\n  const router = useRouter();\n  const {\n    pid\n  } = router.query;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CHARACTER_DETAILS(gql), {\n    variables: {\n      id: pid\n    },\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: 'cache-first'\n  });\n  if (loading) return __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n  if (error) return __jsx(Error, {\n    error: \"error\",\n    message: \"Erro fetching character data...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n  const {\n    name,\n    image,\n    status,\n    species,\n    type,\n    gender,\n    origin,\n    location,\n    episode\n  } = data['character'];\n\n  const renderEpisodes = () => episode.map(episode => __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, JSON.stringify(episode.name)));\n\n  return __jsx(Box, {\n    padding: {\n      md: '20px',\n      sm: '20px',\n      xs: '20px'\n    },\n    marginLeft: {\n      md: '150px',\n      sm: '20px',\n      xs: '20px'\n    },\n    marginRight: {\n      md: '150px',\n      sm: '20px',\n      xs: '20px'\n    },\n    marginTop: \"50px\",\n    pb: \"100px\",\n    borderRadius: \"10px\",\n    d: \"flex\",\n    alignItems: {\n      md: 'flex-start',\n      sm: 'center',\n      xs: 'center'\n    },\n    justifyContent: \"normal\",\n    flexDir: {\n      md: 'row',\n      sm: 'column',\n      xs: 'column'\n    },\n    shadow: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Box, {\n    flex: \"0 0 35%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Image, {\n    src: image,\n    alt: name,\n    textAlign: \"center\",\n    width: \"100%\",\n    borderRadius: \"1000px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, name)), __jsx(Box, {\n    pl: \"20px\",\n    pr: \"20px\",\n    flex: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Episodes:\")));\n  return __jsx(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, JSON.stringify(data, null, 2));\n};\n\nexport default CharacterDetails;","map":{"version":3,"sources":["X:/Victor/Documents/dev/web/rick-and-morty-wiki/src/containers/CharacterDetails/index.js"],"names":["React","useState","useQuery","useRouter","gql","Box","Heading","SimpleGrid","Text","Tab","Tabs","TabList","TabPanel","TabPanels","Image","GET_CHARACTER_DETAILS","Loader","Error","CharacterDetails","router","pid","query","loading","error","data","variables","id","notifyOnNetworkStatusChange","fetchPolicy","name","image","status","species","type","gender","origin","location","episode","renderEpisodes","map","JSON","stringify","md","sm","xs"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SACEC,GADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,GALF,EAMEC,IANF,EAOEC,OAPF,EAQEC,QARF,EASEC,SATF,EAUEC,KAVF,QAWO,iBAXP;AAYA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,KAAT,QAAsB,yBAAtB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAMC,MAAM,GAAGhB,SAAS,EAAxB;AAEA,QAAM;AAAEiB,IAAAA;AAAF,MAAUD,MAAM,CAACE,KAAvB;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BtB,QAAQ,CAACa,qBAAqB,CAACX,GAAD,CAAtB,EAA6B;AACpEqB,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEN;AAAN,KADyD;AAEpEO,IAAAA,2BAA2B,EAAE,IAFuC;AAGpEC,IAAAA,WAAW,EAAE;AAHuD,GAA7B,CAAzC;AAMA,MAAIN,OAAJ,EAAa,OAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAC,iCAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEX,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA,IAAhC;AAAsCC,IAAAA,MAAtC;AAA8CC,IAAAA,MAA9C;AAAsDC,IAAAA,QAAtD;AAAgEC,IAAAA;AAAhE,MAA4Eb,IAAI,CACpF,WADoF,CAAtF;;AAIA,QAAMc,cAAc,GAAG,MAAMD,OAAO,CAACE,GAAR,CAAYF,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,IAAI,CAACC,SAAL,CAAeJ,OAAO,CAACR,IAAvB,CAAJ,CAAvB,CAA7B;;AAEA,SACE,MAAC,GAAD;AACE,IAAA,OAAO,EAAE;AAAEa,MAAAA,EAAE,EAAE,MAAN;AAAcC,MAAAA,EAAE,EAAE,MAAlB;AAA0BC,MAAAA,EAAE,EAAE;AAA9B,KADX;AAEE,IAAA,UAAU,EAAE;AAAEF,MAAAA,EAAE,EAAE,OAAN;AAAeC,MAAAA,EAAE,EAAE,MAAnB;AAA2BC,MAAAA,EAAE,EAAE;AAA/B,KAFd;AAGE,IAAA,WAAW,EAAE;AAAEF,MAAAA,EAAE,EAAE,OAAN;AAAeC,MAAAA,EAAE,EAAE,MAAnB;AAA2BC,MAAAA,EAAE,EAAE;AAA/B,KAHf;AAIE,IAAA,SAAS,EAAC,MAJZ;AAKE,IAAA,EAAE,EAAC,OALL;AAME,IAAA,YAAY,EAAC,MANf;AAOE,IAAA,CAAC,EAAC,MAPJ;AAQE,IAAA,UAAU,EAAE;AAAEF,MAAAA,EAAE,EAAE,YAAN;AAAoBC,MAAAA,EAAE,EAAE,QAAxB;AAAkCC,MAAAA,EAAE,EAAE;AAAtC,KARd;AASE,IAAA,cAAc,EAAC,QATjB;AAUE,IAAA,OAAO,EAAE;AAAEF,MAAAA,EAAE,EAAE,KAAN;AAAaC,MAAAA,EAAE,EAAE,QAAjB;AAA2BC,MAAAA,EAAE,EAAE;AAA/B,KAVX;AAWE,IAAA,MAAM,EAAC,IAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAEd,KAAZ;AAAmB,IAAA,GAAG,EAAED,IAAxB;AAA8B,IAAA,SAAS,EAAC,QAAxC;AAAiD,IAAA,KAAK,EAAC,MAAvD;AAA8D,IAAA,YAAY,EAAC,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUA,IAAV,CAFF,CAbF,EAiBE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,EAAE,EAAC,MAAlB;AAAyB,IAAA,IAAI,EAAC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAjBF,CADF;AAwBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMW,IAAI,CAACC,SAAL,CAAejB,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAN,CAAP;AACD,CA7CD;;AA+CA,eAAeN,gBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { useRouter } from 'next/router';\r\nimport { gql } from 'apollo-boost';\r\nimport {\r\n  Box,\r\n  Heading,\r\n  SimpleGrid,\r\n  Text,\r\n  Tab,\r\n  Tabs,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Image\r\n} from '@chakra-ui/core';\r\nimport { GET_CHARACTER_DETAILS } from '../../lib/queries';\r\nimport Loader from '../../components/common/Loader';\r\nimport { Error } from '../CharacterList/styles';\r\n\r\nconst CharacterDetails = () => {\r\n  const router = useRouter();\r\n\r\n  const { pid } = router.query;\r\n\r\n  const { loading, error, data } = useQuery(GET_CHARACTER_DETAILS(gql), {\r\n    variables: { id: pid },\r\n    notifyOnNetworkStatusChange: true,\r\n    fetchPolicy: 'cache-first'\r\n  });\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <Error error=\"error\" message=\"Erro fetching character data...\" />;\r\n\r\n  const { name, image, status, species, type, gender, origin, location, episode } = data[\r\n    'character'\r\n  ];\r\n\r\n  const renderEpisodes = () => episode.map(episode => <p>{JSON.stringify(episode.name)}</p>);\r\n\r\n  return (\r\n    <Box\r\n      padding={{ md: '20px', sm: '20px', xs: '20px' }}\r\n      marginLeft={{ md: '150px', sm: '20px', xs: '20px' }}\r\n      marginRight={{ md: '150px', sm: '20px', xs: '20px' }}\r\n      marginTop=\"50px\"\r\n      pb=\"100px\"\r\n      borderRadius=\"10px\"\r\n      d=\"flex\"\r\n      alignItems={{ md: 'flex-start', sm: 'center', xs: 'center' }}\r\n      justifyContent=\"normal\"\r\n      flexDir={{ md: 'row', sm: 'column', xs: 'column' }}\r\n      shadow=\"md\"\r\n    >\r\n      <Box flex=\"0 0 35%\">\r\n        <Image src={image} alt={name} textAlign=\"center\" width=\"100%\" borderRadius=\"1000px\" />\r\n        <Heading>{name}</Heading>\r\n      </Box>\r\n      <Box pl=\"20px\" pr=\"20px\" flex=\"1\">\r\n        <Heading>Episodes:</Heading>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return <pre>{JSON.stringify(data, null, 2)}</pre>;\r\n};\r\n\r\nexport default CharacterDetails;\r\n"]},"metadata":{},"sourceType":"module"}