{"ast":null,"code":"var _jsxFileName = \"X:\\\\Victor\\\\Documents\\\\dev\\\\web\\\\rick-and-morty-wiki\\\\src\\\\components\\\\CharacterList\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { Box, Heading } from '@chakra-ui/core';\nimport CharacterItem from '../CharacterItem';\nconst GET_CHARACTERS = gql`\n  {\n    characters(filter: { species: \"Alien\" }) {\n      results {\n        id\n        name\n        status\n        species\n      }\n    }\n  }\n`;\n\nconst CharacterList = () => {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore\n  } = useQuery(GET_CHARACTERS);\n  return __jsx(Box, {\n    p: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Characters\"), !loading && data['results'].map(character => __jsx(CharacterItem, _extends({}, character, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n};\n\nexport default CharacterList;","map":{"version":3,"sources":["X:/Victor/Documents/dev/web/rick-and-morty-wiki/src/components/CharacterList/index.js"],"names":["React","useQuery","gql","Box","Heading","CharacterItem","GET_CHARACTERS","CharacterList","loading","error","data","fetchMore","map","character"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,iBAA7B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,MAAMC,cAAc,GAAGJ,GAAI;;;;;;;;;;;CAA3B;;AAaA,MAAMK,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,MAAsCV,QAAQ,CAACK,cAAD,CAApD;AAEA,SACE,MAAC,GAAD;AAAK,IAAA,CAAC,EAAE,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGG,CAACE,OAAD,IAAYE,IAAI,CAAC,SAAD,CAAJ,CAAgBE,GAAhB,CAAoBC,SAAS,IAAI,MAAC,aAAD,eAAmBA,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjC,CAHf,CADF;AAOD,CAVD;;AAYA,eAAeN,aAAf","sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport { Box, Heading } from '@chakra-ui/core';\r\nimport CharacterItem from '../CharacterItem';\r\n\r\nconst GET_CHARACTERS = gql`\r\n  {\r\n    characters(filter: { species: \"Alien\" }) {\r\n      results {\r\n        id\r\n        name\r\n        status\r\n        species\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CharacterList = () => {\r\n  const { loading, error, data, fetchMore } = useQuery(GET_CHARACTERS);\r\n\r\n  return (\r\n    <Box p={50}>\r\n      <Heading>Characters</Heading>\r\n\r\n      {!loading && data['results'].map(character => <CharacterItem {...character} />)}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n"]},"metadata":{},"sourceType":"module"}