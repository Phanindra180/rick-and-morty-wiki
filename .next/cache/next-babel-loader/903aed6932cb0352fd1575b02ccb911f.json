{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"X:\\\\Victor\\\\Documents\\\\dev\\\\web\\\\rick-and-morty-wiki\\\\src\\\\components\\\\CharacterList\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query characters($first: Int!, $skip: Int!) {\\n    characters(page: 2) {\\n      results {\\n        id\\n        name\\n        status\\n        species\\n        type\\n        gender\\n\\n        image\\n        episode {\\n          id\\n          name\\n          air_date\\n        }\\n\\n        location {\\n          name\\n        }\\n        created\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { Box, Heading, Stack, Flex, SimpleGrid, Button } from '@chakra-ui/core';\nimport CharacterItem from '../CharacterItem';\nimport Loader from '../Loader';\nimport Filter from '../Filter';\nimport { FaRegSadCry } from 'react-icons/fa'; // location {\n//   id\n//   name\n//   type\n// }\n// origin {\n//   id\n//   name\n//   type\n//   dimension\n// }\n\nconst GET_CHARACTERS = gql(_templateObject());\n\nconst Error = ({\n  error\n}) => __jsx(Box, {\n  mt: \"70px\",\n  d: \"flex\",\n  flexDir: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: \"gray.400\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, __jsx(Heading, {\n  mb: \"15px\",\n  textAlign: \"center\",\n  fontSize: \"26px\",\n  fontWeight: \"semibold\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"Could not fetch Rick and Morty characters...\"), __jsx(Box, {\n  as: FaRegSadCry,\n  size: \"64px\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}), __jsx(\"pre\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, _JSON$stringify(error, null, 4)));\n\nconst CharacterList = () => {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore\n  } = useQuery(GET_CHARACTERS, {\n    variables: {\n      skip: 0,\n      first: 20\n    },\n    notifyOnNetworkStatusChange: true\n  });\n  const characterData = data ? data['characters']['results'] : [];\n  if (loading) return __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  });\n  return __jsx(Box, {\n    p: {\n      md: '50px',\n      sm: '40px',\n      xs: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Heading, {\n    as: \"h1\",\n    size: \"2xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Rick and Morty Characters:\"), error ? __jsx(Error, {\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }) : __jsx(React.Fragment, null, __jsx(Filter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(SimpleGrid, {\n    columns: {\n      md: 5,\n      sm: 3,\n      xs: 1\n    },\n    spacingX: \"30px\",\n    spacingY: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, characterData.map(character => __jsx(CharacterItem, _extends({\n    key: character.id\n  }, character, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })))), __jsx(Box, {\n    d: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    mt: \"50px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Button, {\n    color: \"blue\",\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Fetch more!\", ' '))));\n};\n\nconst loadMoreCharacters = (data, fetchMore) => {};\n\nexport default CharacterList;","map":{"version":3,"sources":["X:/Victor/Documents/dev/web/rick-and-morty-wiki/src/components/CharacterList/index.js"],"names":["React","useQuery","gql","Box","Heading","Stack","Flex","SimpleGrid","Button","CharacterItem","Loader","Filter","FaRegSadCry","GET_CHARACTERS","Error","error","CharacterList","loading","data","fetchMore","variables","skip","first","notifyOnNetworkStatusChange","characterData","md","sm","xs","map","character","id","loadMoreCharacters"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport { Box, Heading, Stack, Flex, SimpleGrid, Button } from '@chakra-ui/core';\r\nimport CharacterItem from '../CharacterItem';\r\nimport Loader from '../Loader';\r\nimport Filter from '../Filter';\r\nimport { FaRegSadCry } from 'react-icons/fa';\r\n\r\n// location {\r\n//   id\r\n//   name\r\n//   type\r\n// }\r\n\r\n// origin {\r\n//   id\r\n//   name\r\n//   type\r\n//   dimension\r\n// }\r\n\r\nconst GET_CHARACTERS = gql`\r\n  query characters($first: Int!, $skip: Int!) {\r\n    characters(page: 2) {\r\n      results {\r\n        id\r\n        name\r\n        status\r\n        species\r\n        type\r\n        gender\r\n\r\n        image\r\n        episode {\r\n          id\r\n          name\r\n          air_date\r\n        }\r\n\r\n        location {\r\n          name\r\n        }\r\n        created\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Error = ({ error }) => (\r\n  <Box\r\n    mt=\"70px\"\r\n    d=\"flex\"\r\n    flexDir=\"column\"\r\n    alignItems=\"center\"\r\n    justifyContent=\"center\"\r\n    color=\"gray.400\"\r\n  >\r\n    <Heading mb=\"15px\" textAlign=\"center\" fontSize=\"26px\" fontWeight=\"semibold\">\r\n      Could not fetch Rick and Morty characters...\r\n    </Heading>\r\n    <Box as={FaRegSadCry} size=\"64px\" />\r\n    <pre>{JSON.stringify(error, null, 4)}</pre>\r\n  </Box>\r\n);\r\n\r\nconst CharacterList = () => {\r\n  const { loading, error, data, fetchMore } = useQuery(GET_CHARACTERS, {\r\n    variables: { skip: 0, first: 20 },\r\n    notifyOnNetworkStatusChange: true\r\n  });\r\n\r\n  const characterData = data ? data['characters']['results'] : [];\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  return (\r\n    <Box p={{ md: '50px', sm: '40px', xs: '20px' }}>\r\n      <Heading as=\"h1\" size=\"2xl\">\r\n        Rick and Morty Characters:\r\n      </Heading>\r\n\r\n      {error ? (\r\n        <Error error={error} />\r\n      ) : (\r\n        <>\r\n          <Filter />\r\n\r\n          <SimpleGrid columns={{ md: 5, sm: 3, xs: 1 }} spacingX=\"30px\" spacingY=\"30px\">\r\n            {characterData.map(character => (\r\n              <CharacterItem key={character.id} {...character} />\r\n            ))}\r\n          </SimpleGrid>\r\n\r\n          <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" mt=\"50px\">\r\n            <Button color=\"blue\" size=\"lg\">\r\n              Fetch more!{' '}\r\n            </Button>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst loadMoreCharacters = (data, fetchMore) => {};\r\n\r\nexport default CharacterList;\r\n"]},"metadata":{},"sourceType":"module"}