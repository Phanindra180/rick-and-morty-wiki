{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"X:\\\\Victor\\\\Documents\\\\dev\\\\web\\\\rick-and-morty-wiki\\\\src\\\\components\\\\CharacterList\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    characters {\\n      results {\\n        id\\n        name\\n        status\\n        species\\n        type\\n        gender\\n\\n        image\\n        episode {\\n          id\\n          name\\n          air_date\\n        }\\n        created\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { Box, Heading, Stack, Flex, SimpleGrid } from '@chakra-ui/core';\nimport CharacterItem from '../CharacterItem';\nimport Loader from '../Loader';\nimport Filter from '../Filter'; // location {\n//   id\n//   name\n//   type\n// }\n// origin {\n//   id\n//   name\n//   type\n//   dimension\n// }\n\nconst GET_CHARACTERS = gql(_templateObject());\n\nconst CharacterList = () => {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore\n  } = useQuery(GET_CHARACTERS);\n  const characterData = data ? data['characters']['results'] : [];\n  if (loading) return __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  });\n  if (error) return 'Error fetching characters.';\n  return __jsx(Box, {\n    p: {\n      md: '50px',\n      sm: '40px',\n      xs: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Heading, {\n    as: \"h1\",\n    size: \"2xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Rick and Morty Characters:\"), __jsx(Filter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(SimpleGrid, {\n    columns: {\n      md: 5,\n      sm: 3,\n      xs: 1\n    },\n    spacingX: \"30px\",\n    spacingY: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, characterData.map(character => __jsx(CharacterItem, _extends({\n    key: character.id\n  }, character, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })))));\n};\n\nexport default CharacterList;","map":{"version":3,"sources":["X:/Victor/Documents/dev/web/rick-and-morty-wiki/src/components/CharacterList/index.js"],"names":["React","useQuery","gql","Box","Heading","Stack","Flex","SimpleGrid","CharacterItem","Loader","Filter","GET_CHARACTERS","CharacterList","loading","error","data","fetchMore","characterData","md","sm","xs","map","character","id"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,UAApC,QAAsD,iBAAtD;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAGT,GAAH,mBAApB;;AAuBA,MAAMU,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,MAAsCf,QAAQ,CAACU,cAAD,CAApD;AACA,QAAMM,aAAa,GAAGF,IAAI,GAAGA,IAAI,CAAC,YAAD,CAAJ,CAAmB,SAAnB,CAAH,GAAmC,EAA7D;AAEA,MAAIF,OAAJ,EAAa,OAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,4BAAP;AAEX,SACE,MAAC,GAAD;AAAK,IAAA,CAAC,EAAE;AAAEI,MAAAA,EAAE,EAAE,MAAN;AAAcC,MAAAA,EAAE,EAAE,MAAlB;AAA0BC,MAAAA,EAAE,EAAE;AAA9B,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,EAAE,EAAC,IAAZ;AAAiB,IAAA,IAAI,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAKE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAOE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE,CAAb;AAAgBC,MAAAA,EAAE,EAAE;AAApB,KAArB;AAA8C,IAAA,QAAQ,EAAC,MAAvD;AAA8D,IAAA,QAAQ,EAAC,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,aAAa,CAACI,GAAd,CAAkBC,SAAS,IAC1B,MAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,SAAS,CAACC;AAA9B,KAAsCD,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CAPF,CADF;AAeD,CAtBD;;AAwBA,eAAeV,aAAf","sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport { Box, Heading, Stack, Flex, SimpleGrid } from '@chakra-ui/core';\r\nimport CharacterItem from '../CharacterItem';\r\nimport Loader from '../Loader';\r\nimport Filter from '../Filter';\r\n\r\n// location {\r\n//   id\r\n//   name\r\n//   type\r\n// }\r\n\r\n// origin {\r\n//   id\r\n//   name\r\n//   type\r\n//   dimension\r\n// }\r\n\r\nconst GET_CHARACTERS = gql`\r\n  {\r\n    characters {\r\n      results {\r\n        id\r\n        name\r\n        status\r\n        species\r\n        type\r\n        gender\r\n\r\n        image\r\n        episode {\r\n          id\r\n          name\r\n          air_date\r\n        }\r\n        created\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CharacterList = () => {\r\n  const { loading, error, data, fetchMore } = useQuery(GET_CHARACTERS);\r\n  const characterData = data ? data['characters']['results'] : [];\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return 'Error fetching characters.';\r\n\r\n  return (\r\n    <Box p={{ md: '50px', sm: '40px', xs: '20px' }}>\r\n      <Heading as=\"h1\" size=\"2xl\">\r\n        Rick and Morty Characters:\r\n      </Heading>\r\n\r\n      <Filter />\r\n\r\n      <SimpleGrid columns={{ md: 5, sm: 3, xs: 1 }} spacingX=\"30px\" spacingY=\"30px\">\r\n        {characterData.map(character => (\r\n          <CharacterItem key={character.id} {...character} />\r\n        ))}\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n"]},"metadata":{},"sourceType":"module"}