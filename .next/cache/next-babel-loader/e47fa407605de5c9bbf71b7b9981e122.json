{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"X:\\\\Victor\\\\Documents\\\\dev\\\\web\\\\rick-and-morty-wiki\\\\src\\\\components\\\\CharacterList\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    characters(filter: { species: \\\"Alien\\\" }) {\\n      results {\\n        id\\n        name\\n        status\\n        species\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { Box, Heading, Spinner } from '@chakra-ui/core';\nimport CharacterItem from '../CharacterItem';\nconst GET_CHARACTERS = gql(_templateObject());\n\nconst CharacterList = () => {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore\n  } = useQuery(GET_CHARACTERS);\n  const finalData = data['characters']['results'];\n  if (loading) return __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n  if (error) return 'Error fetching characters.';\n  return __jsx(Box, {\n    p: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Characters\"), !loading && data['characters']['results'].map(character => __jsx(CharacterItem, _extends({}, character, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))));\n};\n\nexport default CharacterList;","map":{"version":3,"sources":["X:/Victor/Documents/dev/web/rick-and-morty-wiki/src/components/CharacterList/index.js"],"names":["React","useQuery","gql","Box","Heading","Spinner","CharacterItem","GET_CHARACTERS","CharacterList","loading","error","data","fetchMore","finalData","map","character"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,OAAvB,QAAsC,iBAAtC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,MAAMC,cAAc,GAAGL,GAAH,mBAApB;;AAaA,MAAMM,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,MAAsCX,QAAQ,CAACM,cAAD,CAApD;AACA,QAAMM,SAAS,GAAGF,IAAI,CAAC,YAAD,CAAJ,CAAmB,SAAnB,CAAlB;AAEA,MAAIF,OAAJ,EAAa,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,4BAAP;AAEX,SACE,MAAC,GAAD;AAAK,IAAA,CAAC,EAAE,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGG,CAACD,OAAD,IAAYE,IAAI,CAAC,YAAD,CAAJ,CAAmB,SAAnB,EAA8BG,GAA9B,CAAkCC,SAAS,IAAI,MAAC,aAAD,eAAmBA,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/C,CAHf,CADF;AAOD,CAdD;;AAgBA,eAAeP,aAAf","sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport { Box, Heading, Spinner } from '@chakra-ui/core';\r\nimport CharacterItem from '../CharacterItem';\r\n\r\nconst GET_CHARACTERS = gql`\r\n  {\r\n    characters(filter: { species: \"Alien\" }) {\r\n      results {\r\n        id\r\n        name\r\n        status\r\n        species\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CharacterList = () => {\r\n  const { loading, error, data, fetchMore } = useQuery(GET_CHARACTERS);\r\n  const finalData = data['characters']['results'];\r\n\r\n  if (loading) return <Spinner />;\r\n  if (error) return 'Error fetching characters.';\r\n\r\n  return (\r\n    <Box p={50}>\r\n      <Heading>Characters</Heading>\r\n\r\n      {!loading && data['characters']['results'].map(character => <CharacterItem {...character} />)}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n"]},"metadata":{},"sourceType":"module"}