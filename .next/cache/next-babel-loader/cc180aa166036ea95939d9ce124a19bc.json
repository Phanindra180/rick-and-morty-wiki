{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { theme as ChakraTheme } from '@chakra-ui/core';\n\nconst theme = _objectSpread({}, ChakraTheme);\n\nexport default theme;","map":{"version":3,"sources":["X:/Victor/Documents/dev/web/rick-and-morty-wiki/src/lib/theme.js"],"names":["theme","ChakraTheme"],"mappings":";;;;;;AAAA,SAASA,KAAK,IAAIC,WAAlB,QAAqC,iBAArC;;AAEA,MAAMD,KAAK,qBAAQC,WAAR,CAAX;;AAEA,eAAeD,KAAf","sourcesContent":["import { theme as ChakraTheme } from '@chakra-ui/core';\r\n\r\nconst theme = { ...ChakraTheme };\r\n\r\nexport default theme;\r\n"]},"metadata":{},"sourceType":"module"}