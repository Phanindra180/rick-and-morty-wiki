{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"X:\\\\Victor\\\\Documents\\\\dev\\\\web\\\\rick-and-morty-wiki\\\\src\\\\components\\\\CharacterList\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    characters {\\n      results {\\n        id\\n        name\\n        status\\n        species\\n        type\\n        gender\\n\\n        image\\n        episode {\\n          id\\n          name\\n          air_date\\n        }\\n        created\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { Box, Heading, Spinner, Flex } from '@chakra-ui/core';\nimport CharacterItem from '../CharacterItem'; // location {\n//   id\n//   name\n//   type\n// }\n// origin {\n//   id\n//   name\n//   type\n//   dimension\n// }\n\nconst GET_CHARACTERS = gql(_templateObject());\n\nconst CharacterList = () => {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore\n  } = useQuery(GET_CHARACTERS);\n  if (true) return __jsx(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: '100vh',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Spinner, {\n    thickness: \"4px\",\n    speed: \"0.65s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n  if (error) return 'Error fetching characters.';\n  return __jsx(Box, {\n    p: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Heading, {\n    as: \"h1\",\n    size: \"2xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Rick and Morty Characters:\"), !loading && data['characters']['results'].map(character => __jsx(CharacterItem, _extends({}, character, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))));\n};\n\nexport default CharacterList;","map":{"version":3,"sources":["X:/Victor/Documents/dev/web/rick-and-morty-wiki/src/components/CharacterList/index.js"],"names":["React","useQuery","gql","Box","Heading","Spinner","Flex","CharacterItem","GET_CHARACTERS","CharacterList","loading","error","data","fetchMore","map","character"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,OAAvB,EAAgCC,IAAhC,QAA4C,iBAA5C;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAGN,GAAH,mBAApB;;AAuBA,MAAMO,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,MAAsCZ,QAAQ,CAACO,cAAD,CAApD;AAEA,MAAI,IAAJ,EACE,OACE,MAAC,IAAD;AAAM,IAAA,cAAc,EAAC,QAArB;AAA8B,IAAA,UAAU,EAAC,QAAzC;AAAkD,IAAA,MAAM,EAAE,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,KAAnB;AAAyB,IAAA,KAAK,EAAC,OAA/B;AAAuC,IAAA,UAAU,EAAC,UAAlD;AAA6D,IAAA,KAAK,EAAC,UAAnE;AAA8E,IAAA,IAAI,EAAC,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKF,MAAIG,KAAJ,EAAW,OAAO,4BAAP;AAEX,SACE,MAAC,GAAD;AAAK,IAAA,CAAC,EAAE,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,EAAE,EAAC,IAAZ;AAAiB,IAAA,IAAI,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAKG,CAACD,OAAD,IAAYE,IAAI,CAAC,YAAD,CAAJ,CAAmB,SAAnB,EAA8BE,GAA9B,CAAkCC,SAAS,IAAI,MAAC,aAAD,eAAmBA,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/C,CALf,CADF;AASD,CApBD;;AAsBA,eAAeN,aAAf","sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport { Box, Heading, Spinner, Flex } from '@chakra-ui/core';\r\nimport CharacterItem from '../CharacterItem';\r\n\r\n// location {\r\n//   id\r\n//   name\r\n//   type\r\n// }\r\n\r\n// origin {\r\n//   id\r\n//   name\r\n//   type\r\n//   dimension\r\n// }\r\n\r\nconst GET_CHARACTERS = gql`\r\n  {\r\n    characters {\r\n      results {\r\n        id\r\n        name\r\n        status\r\n        species\r\n        type\r\n        gender\r\n\r\n        image\r\n        episode {\r\n          id\r\n          name\r\n          air_date\r\n        }\r\n        created\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CharacterList = () => {\r\n  const { loading, error, data, fetchMore } = useQuery(GET_CHARACTERS);\r\n\r\n  if (true)\r\n    return (\r\n      <Flex justifyContent=\"center\" alignItems=\"center\" height={'100vh'}>\r\n        <Spinner thickness=\"4px\" speed=\"0.65s\" emptyColor=\"gray.200\" color=\"blue.500\" size=\"xl\" />\r\n      </Flex>\r\n    );\r\n  if (error) return 'Error fetching characters.';\r\n\r\n  return (\r\n    <Box p={50}>\r\n      <Heading as=\"h1\" size=\"2xl\">\r\n        Rick and Morty Characters:\r\n      </Heading>\r\n\r\n      {!loading && data['characters']['results'].map(character => <CharacterItem {...character} />)}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n"]},"metadata":{},"sourceType":"module"}