{"ast":null,"code":"var _jsxFileName = \"X:\\\\Victor\\\\Documents\\\\dev\\\\web\\\\rick-and-morty-wiki\\\\src\\\\containers\\\\CharacterDetails\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRouter } from 'next/router';\nimport { gql } from 'apollo-boost';\nimport { Box, Heading, SimpleGrid, Text } from '@chakra-ui/core';\nimport { GET_CHARACTER_DETAILS } from '../../lib/queries';\n\nconst CharacterDetails = () => {\n  const router = useRouter();\n  const {\n    pid\n  } = router.query; // const { loading, error, data } = useQuery(GET_CHARACTER_DETAILS(gql, id), {\n  //   variables: { page: 1, filter },\n  //   notifyOnNetworkStatusChange: true,\n  //   fetchPolicy: 'cache-first'\n  // });\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"CharacterDetails : \", pid);\n};\n\nexport default CharacterDetails;","map":{"version":3,"sources":["X:/Victor/Documents/dev/web/rick-and-morty-wiki/src/containers/CharacterDetails/index.js"],"names":["React","useState","useQuery","useRouter","gql","Box","Heading","SimpleGrid","Text","GET_CHARACTER_DETAILS","CharacterDetails","router","pid","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,UAAvB,EAAmCC,IAAnC,QAA+C,iBAA/C;AACA,SAASC,qBAAT,QAAsC,mBAAtC;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAUD,MAAM,CAACE,KAAvB,CAH6B,CAK7B;AACA;AACA;AACA;AACA;;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAyBD,GAAzB,CAAP;AACD,CAZD;;AAcA,eAAeF,gBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { useRouter } from 'next/router';\r\nimport { gql } from 'apollo-boost';\r\nimport { Box, Heading, SimpleGrid, Text } from '@chakra-ui/core';\r\nimport { GET_CHARACTER_DETAILS } from '../../lib/queries';\r\n\r\nconst CharacterDetails = () => {\r\n  const router = useRouter();\r\n\r\n  const { pid } = router.query;\r\n\r\n  // const { loading, error, data } = useQuery(GET_CHARACTER_DETAILS(gql, id), {\r\n  //   variables: { page: 1, filter },\r\n  //   notifyOnNetworkStatusChange: true,\r\n  //   fetchPolicy: 'cache-first'\r\n  // });\r\n\r\n  return <div>CharacterDetails : {pid}</div>;\r\n};\r\n\r\nexport default CharacterDetails;\r\n"]},"metadata":{},"sourceType":"module"}