{"ast":null,"code":"var _jsxFileName = \"X:\\\\Victor\\\\Documents\\\\dev\\\\web\\\\rick-and-morty-wiki\\\\src\\\\containers\\\\CharacterDetails\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useRouter } from 'next/router';\nimport { gql } from 'apollo-boost';\nimport { Box, Heading, SimpleGrid, Text, Tab, Tabs, TabList, TabPanel, TabPanels, Image } from '@chakra-ui/core';\nimport { GET_CHARACTER_DETAILS } from '../../lib/queries';\nimport Loader from '../../components/common/Loader';\nimport { Error } from '../CharacterList/styles';\n\nconst CharacterDetails = () => {\n  const router = useRouter();\n  const {\n    pid\n  } = router.query;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_CHARACTER_DETAILS(gql), {\n    variables: {\n      id: pid\n    },\n    notifyOnNetworkStatusChange: true,\n    fetchPolicy: 'cache-first'\n  });\n  if (loading) return __jsx(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n  if (error) return __jsx(Error, {\n    error: \"error\",\n    message: \"Erro fetching character data...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n  const {\n    name,\n    image,\n    status,\n    species,\n    type,\n    gender,\n    origin,\n    location,\n    episode\n  } = data['character'];\n\n  const renderLocations = () => {};\n\n  const renderEpisodes = () => episodes.map(episode => null);\n\n  return __jsx(Box, {\n    padding: {\n      md: '20px',\n      sm: '20px',\n      xs: '20px'\n    },\n    marginLeft: {\n      md: '150px',\n      sm: '20px',\n      xs: '20px'\n    },\n    marginRight: {\n      md: '150px',\n      sm: '20px',\n      xs: '20px'\n    },\n    marginTop: \"50px\",\n    borderRadius: \"10px\",\n    d: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"space-between\",\n    flexDir: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Box, {\n    position: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Image, {\n    src: image,\n    alt: name,\n    borderRadius: \"20px 20px 0px 0px\",\n    textAlign: \"center\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(Box, {\n    p: \"20px\",\n    bg: \"rgba(0,0,0,0.5)\",\n    position: \"absolute\",\n    bottom: \"0\",\n    w: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(Heading, {\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, name))), __jsx(Box, {\n    flex: \"1\",\n    pl: \"20px\",\n    pr: \"20px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Tabs, {\n    isFitted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(TabList, {\n    mb: \"1em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(Tab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Info\"), __jsx(Tab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Locations\"), __jsx(Tab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Episodes\")), __jsx(TabPanels, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"one!\")), __jsx(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, JSON.stringify(location))), __jsx(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"3!\"))))));\n  return __jsx(\"pre\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, JSON.stringify(data, null, 2));\n};\n\nexport default CharacterDetails;","map":{"version":3,"sources":["X:/Victor/Documents/dev/web/rick-and-morty-wiki/src/containers/CharacterDetails/index.js"],"names":["React","useState","useQuery","useRouter","gql","Box","Heading","SimpleGrid","Text","Tab","Tabs","TabList","TabPanel","TabPanels","Image","GET_CHARACTER_DETAILS","Loader","Error","CharacterDetails","router","pid","query","loading","error","data","variables","id","notifyOnNetworkStatusChange","fetchPolicy","name","image","status","species","type","gender","origin","location","episode","renderLocations","renderEpisodes","episodes","map","md","sm","xs","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { useRouter } from 'next/router';\r\nimport { gql } from 'apollo-boost';\r\nimport {\r\n  Box,\r\n  Heading,\r\n  SimpleGrid,\r\n  Text,\r\n  Tab,\r\n  Tabs,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Image\r\n} from '@chakra-ui/core';\r\nimport { GET_CHARACTER_DETAILS } from '../../lib/queries';\r\nimport Loader from '../../components/common/Loader';\r\nimport { Error } from '../CharacterList/styles';\r\n\r\nconst CharacterDetails = () => {\r\n  const router = useRouter();\r\n\r\n  const { pid } = router.query;\r\n\r\n  const { loading, error, data } = useQuery(GET_CHARACTER_DETAILS(gql), {\r\n    variables: { id: pid },\r\n    notifyOnNetworkStatusChange: true,\r\n    fetchPolicy: 'cache-first'\r\n  });\r\n\r\n  if (loading) return <Loader />;\r\n  if (error) return <Error error=\"error\" message=\"Erro fetching character data...\" />;\r\n\r\n  const { name, image, status, species, type, gender, origin, location, episode } = data[\r\n    'character'\r\n  ];\r\n\r\n  const renderLocations = () => {};\r\n\r\n  const renderEpisodes = () => episodes.map(episode => null);\r\n\r\n  return (\r\n    <Box\r\n      padding={{ md: '20px', sm: '20px', xs: '20px' }}\r\n      marginLeft={{ md: '150px', sm: '20px', xs: '20px' }}\r\n      marginRight={{ md: '150px', sm: '20px', xs: '20px' }}\r\n      marginTop=\"50px\"\r\n      borderRadius=\"10px\"\r\n      d=\"flex\"\r\n      alignItems=\"flex-start\"\r\n      justifyContent=\"space-between\"\r\n      flexDir=\"row\"\r\n    >\r\n      <Box position=\"relative\">\r\n        <Image\r\n          src={image}\r\n          alt={name}\r\n          borderRadius=\"20px 20px 0px 0px\"\r\n          textAlign=\"center\"\r\n          width=\"100%\"\r\n        />\r\n        <Box p=\"20px\" bg=\"rgba(0,0,0,0.5)\" position=\"absolute\" bottom=\"0\" w=\"100%\">\r\n          <Heading color=\"white\">{name}</Heading>\r\n        </Box>\r\n      </Box>\r\n      <Box flex=\"1\" pl=\"20px\" pr=\"20px\">\r\n        <Tabs isFitted>\r\n          <TabList mb=\"1em\">\r\n            <Tab>Info</Tab>\r\n            <Tab>Locations</Tab>\r\n            <Tab>Episodes</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <p>one!</p>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <pre>{JSON.stringify(location)}</pre>\r\n            </TabPanel>\r\n\r\n            <TabPanel>\r\n              <p>3!</p>\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return <pre>{JSON.stringify(data, null, 2)}</pre>;\r\n};\r\n\r\nexport default CharacterDetails;\r\n"]},"metadata":{},"sourceType":"module"}